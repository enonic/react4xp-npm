/*plugins {
  id "com.github.node-gradle.node" // version "3.0.1"
}*/

clean.delete './webpack.config.js', './build', './entriesandchunks.js', 'test/dummy-build', "test/output"

compileJS.args = ['run', 'babel']
compileJS.inputs.files('package.json', 'src/entriesandchunks.js')
compileJS.outputs.file('./entriesandchunks.js')

task copyFiles(type: Copy) {
  from 'src'
  include "*.*"
  into '.'
}
copyFiles.inputs.file('src/webpack.config.js')
copyFiles.inputs.file('src/entriesandchunks.js')
copyFiles.outputs.file('./webpack.config.js')
copyFiles.outputs.file('./entriesandchunks.js')
build.dependsOn copyFiles


task makeConstants(type: NodeTask) {
  script = file('../../node_modules/react4xp-buildconstants/bin/cli.js')
  args = [project.PROJDIR, '"{\\"verbose\\":true,\\"overwriteConstantsFile\\":true,\\"outputFileName\\":\\"' + project.PROJDIR + '/build/constants.json\\",\\"SRC_R4X\\":\\"' + project.PROJDIR + '/test/main/resources/react4xp\\",\\"SRC_SITE\\":\\"' + project.PROJDIR + '/test/main/resources/site\\"}"']
}
makeConstants.inputs.file('../../node_modules/react4xp-buildconstants/bin/cli.js')
makeConstants.outputs.dir('build')

makeConstants.dependsOn build

task testEntriesAndChunks(type: NpmTask) {
  args = ['run', 'test:entriesAndChunks']
}
testEntriesAndChunks.outputs.dir('test/build')
testEntriesAndChunks.outputs.dir('test/output')
task testRaw(type: NpmTask) {
  args = ['run', 'test:raw']
}
testRaw.outputs.dir('test/build')
testRaw.outputs.dir('test/output')
task testOverride(type: NpmTask) {
  args = ['run', 'test:override']
}
testOverride.outputs.dir('test/build')
testOverride.outputs.dir('test/output')

test.args = ['run', "test:main"]
test.dependsOn copyFiles

// FIXME: These 3 shouldn't fail! Fix them and re-introduce!
//test.dependsOn testEntriesAndChunks
//test.dependsOn testRaw
//test.dependsOn testOverride

test.dependsOn makeConstants
testEntriesAndChunks.dependsOn copyFiles
testRaw.dependsOn copyFiles
makeConstants.dependsOn copyFiles
testOverride.dependsOn copyFiles
test.outputs.dir('test/build')
test.outputs.dir('test/output')

//doPublish.shouldRunAfter ":packages:constants:doPublish"
//doPublish.shouldRunAfter ":packages:regions:doPublish"
