/*plugins {
  id "com.github.node-gradle.node" // version "3.0.1"
}*/

clean.delete fileTree('.') { include '*.jsx' }
clean.delete fileTree('.') { include '*.ts' }
clean.delete fileTree('.') { include '*.tsx' }
clean.delete fileTree('.') { include '*.es' }
clean.delete fileTree('.') { include '*.es6' }
clean.delete fileTree('.') { include '*.*ss' }
clean.delete fileTree('.') { include '*.*g' }
clean.delete fileTree('.') { include '*.gif' }
clean.delete fileTree('.') { include '*.ico' }
/* TODO: THE ABOVE WORKS. THE BELOW DOESN'T - SHOULDN'T IT? WOULD BE A BIT CLEANER:
[
  '*.js',
  '*.jsx',
  '*.ts',
  '*.tsx',
  '*.es',
  '*.es6',
  '*.*ss',
  '*.*g',
  '*.gif',
  '*.ico'
].each {
  clean.delete fileTree('.') { include "${it.toString()}" }
}
*/
clean.delete 'entries'

compileJS.enabled = false

lint.args = ['run', 'lint']
lint.inputs.file('package.json')
lint.inputs.dir('src')
//lint.dependsOn project.npmInstall

test.enabled = false
//test.args=['run', 'ADD SOME TESTS PLZ?']
//test.inputs.files('package.json')
//test.outputs.files('package.json')
//test.inputs.dir('src')
//test.outputs.dir('test/build')
//test.outputs.dir('test/output')

task copyFiles(type: Copy) {
    from 'src'
    into '.'
    include '*.*'
    include 'entries/**'
}
copyFiles.inputs.dir('src')
copyFiles.outputs.files('./*.jsx')
copyFiles.outputs.dir('entries')
build.dependsOn project.copyFiles

//project.doPublish.shouldRunAfter ":packages:constants:doPublish"

