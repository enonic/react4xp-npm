/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

plugins {
  id "com.github.node-gradle.node" version "3.1.1"
}

allprojects {
  repositories {
    mavenLocal()
    mavenCentral()
  }
}

project.ext.SUBPROJS_TO_IGNORE = [
  'packages'
]
configure(subprojects.findAll { !project.ext.SUBPROJS_TO_IGNORE.contains(it.name) }) {
  apply plugin: "com.github.node-gradle.node" // version "3.0.1"

  def slash = File.separator
  project.ext.PROJDIR = "${project.buildDir.toString()}${slash}${slash}${slash}".replace("${slash}build${slash}${slash}", '')

  task clean(type: Delete) {}

  task compileJS(type: NpmTask) {}
  compileJS.inputs.file('package.json')
  compileJS.inputs.dir('src')


  task build {}
  build.dependsOn ":packages:${project.name}:compileJS"

  task lint(type: NpmTask) {
    args = ['run', 'lint']
  }
  lint.inputs.dir('src')
  lint.outputs.dir('src')
  build.shouldRunAfter ":packages:${project.name}:lint"


  task test(type: NpmTask) {}
  test.inputs.files('package.json')
  test.inputs.dir('src')
  test.inputs.dir('test')
  // test.dependsOn ":packages:${project.name}:npmClean"
  test.dependsOn ":packages:${project.name}:lint"
  test.dependsOn build

// package.json sets up postinstall script that makes sure packages/react4xp npm i is also run, so this shouldn't also be run as gradle tasks in each subproject
  npmInstall.enabled = false
}

// package.json sets up postinstall script that makes sure packages/react4xp npm i is also run
def slash = File.separator
def rootMarkerName = "node_modules${slash}npmInstalled.marker"
def r4xpMarkerName = "packages${slash}react4xp${slash}node_modules${slash}npmInstalled.marker"
npmInstall.inputs.files('package.json', 'package-lock.json', 'build.gradle', 'packages/react4xp/package.json', 'packages/react4xp/package-lock.json', rootMarkerName, r4xpMarkerName)
npmInstall.outputs.files('package-lock.json', 'packages/react4xp/package-lock.json', rootMarkerName, r4xpMarkerName)
npmInstall.doLast {
  println ""
  def markerName = ".${slash}${rootMarkerName}"
  def marker = new File(markerName)
  new File(marker.getParent()).mkdirs()
  marker.text = """
Marker file indicating that the npmInstall gradle task has been run in the root project - faster than traversing the entire node_modules tree for changes.
"""
  println "\nnpmInstalled marker--> $markerName"

  markerName = ".${slash}${r4xpMarkerName}"
  marker = new File(markerName)
  new File(marker.getParent()).mkdirs()
  marker.text = """
Marker file indicating that the npmInstall gradle task has been run in the root project - faster than traversing the entire node_modules tree for changes.
"""
  println "npmInstalled marker --> $markerName\n"
}


task clean(type: Delete) {
  delete 'build'
  followSymlinks = false
}

task npmUnlink(type: NpmTask) {
  args = ['run', 'npmUnlink']

  npmInstall.inputs.files('package.json', 'package-lock.json', 'build.gradle')
}
task npmLink(type: NpmTask) {
  args = ['run', 'link:all']

  npmInstall.inputs.files('package.json', 'package-lock.json', 'build.gradle')
  inputs.files('package.json', 'build.gradle')
}

task build {}
build.dependsOn npmInstall

// npmLink.mustRunAfter npmDoInstall
// npmInstall.dependsOn npmLink

///////////////////////////////////////////////////

apply from: 'versionAndPublish.gradle'


